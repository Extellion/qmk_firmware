#!/usr/bin/env python3
"""CLI wrapper for running QMK commands.
"""
import os
import subprocess
import sys
from glob import glob
from time import strftime
from importlib import import_module
from importlib.util import find_spec

# Add the QMK python libs to our path
script_dir = os.path.dirname(os.path.realpath(__file__))
qmk_dir = os.path.abspath(os.path.join(script_dir, '..'))
python_lib_dir = os.path.abspath(os.path.join(qmk_dir, 'lib', 'python'))
sys.path.append(python_lib_dir)

# Change to the root of our checkout
os.environ['ORIG_CWD'] = os.getcwd()
os.chdir(qmk_dir)

# Make sure our modules have been setup
with open('requirements.txt', 'r') as fd:
    for line in fd.readlines():
        line = line.strip().replace('<', '=').replace('>', '=')

        if line[0] == '#':
            continue

        if '#' in line:
            line = line.split('#')[0]

        module = line.split('=')[0] if '=' in line else line
        if not find_spec(module):
            print('Your QMK build environment is not fully setup!\n')
            print('Please run `./util/qmk_install.sh` to setup QMK.')
            exit(255)

# Figure out our version
command = ['git', 'describe', '--abbrev=6', '--dirty', '--always', '--tags']
result = subprocess.run(command, universal_newlines=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

if result.returncode == 0:
    os.environ['QMK_VERSION'] = 'QMK ' + result.stdout.strip()
else:
    os.environ['QMK_VERSION'] = 'QMK ' + strftime('%Y-%m-%d-%H:%M:%S')

# Setup the CLI
import milc
milc.EMOJI_LOGLEVELS['INFO'] = '{fg_blue}Î¨{style_reset_all}'


@milc.cli.entrypoint('QMK Helper Script')
def qmk_main(cli):
    # If run without a subcommand show the help
    cli.print_help()


# Look for which module to import
subcommand = None
for count, arg in enumerate(sys.argv[1:]):
    if arg and arg[0] != '-':
        sys.argv[count+1] = arg.replace('-', '_')
        subcommand = arg.replace('-', '.').replace('_', '.')
        break

if not subcommand:
    # Import all the subcommand modules so --help works correctly
    for dirpath, dirnames, filenames in os.walk('lib/python/qmk/cli'):
        for file in filenames:
            if file.endswith('.py') and file != '__init__.py':
                file = file[:-3]
                module = '.'.join(dirpath.split('/')[2:]) + '.' + file
                try:
                    import_module(module)
                except ModuleNotFoundError as e:
                    if e.__class__.__name__ != module:
                        raise
else:
    # Import only the subcommand module we care about for faster startup
    subcommand = 'qmk.cli.' + subcommand

    try:
        import_module(subcommand)
    except ModuleNotFoundError as e:
        if e.name != subcommand:
            raise

        print()
        milc.cli.log.error('Invalid subcommand! Could not import %s.', subcommand)
        exit(1)

if __name__ == '__main__':
    return_code = milc.cli()
    if return_code is False:
        exit(1)
    elif return_code is not True and isinstance(return_code, int) and return_code < 256:
        exit(return_code)
    else:
        exit(0)
